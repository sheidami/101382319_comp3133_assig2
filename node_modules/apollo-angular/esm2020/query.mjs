import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "./apollo";
export class Query {
    constructor(apollo) {
        this.apollo = apollo;
        this.client = 'default';
    }
    watch(variables, options) {
        return this.apollo.use(this.client).watchQuery({
            ...options,
            variables,
            query: this.document,
        });
    }
    fetch(variables, options) {
        return this.apollo.use(this.client).query({
            ...options,
            variables,
            query: this.document,
        });
    }
}
Query.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.5", ngImport: i0, type: Query, deps: [{ token: i1.Apollo }], target: i0.ɵɵFactoryTarget.Injectable });
Query.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.2.5", ngImport: i0, type: Query });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.5", ngImport: i0, type: Query, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: i1.Apollo }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicXVlcnkuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcXVlcnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFDLFVBQVUsRUFBQyxNQUFNLGVBQWUsQ0FBQzs7O0FBVXpDLE1BQU0sT0FBTyxLQUFLO0lBSWhCLFlBQXNCLE1BQWM7UUFBZCxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBRjdCLFdBQU0sR0FBRyxTQUFTLENBQUM7SUFFYSxDQUFDO0lBRWpDLEtBQUssQ0FDVixTQUFhLEVBQ2IsT0FBc0M7UUFFdEMsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsVUFBVSxDQUFPO1lBQ25ELEdBQUcsT0FBTztZQUNWLFNBQVM7WUFDVCxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVE7U0FDckIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQztJQUVNLEtBQUssQ0FDVixTQUFhLEVBQ2IsT0FBaUM7UUFFakMsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsS0FBSyxDQUFPO1lBQzlDLEdBQUcsT0FBTztZQUNWLFNBQVM7WUFDVCxLQUFLLEVBQUUsSUFBSSxDQUFDLFFBQVE7U0FDckIsQ0FBQyxDQUFDO0lBQ0wsQ0FBQzs7a0dBMUJVLEtBQUs7c0dBQUwsS0FBSzsyRkFBTCxLQUFLO2tCQURqQixVQUFVIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtJbmplY3RhYmxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB0eXBlIHtEb2N1bWVudE5vZGV9IGZyb20gJ2dyYXBocWwnO1xuaW1wb3J0IHR5cGUgeyBBcG9sbG9RdWVyeVJlc3VsdCwgVHlwZWREb2N1bWVudE5vZGUsIE9wZXJhdGlvblZhcmlhYmxlcyB9IGZyb20gJ0BhcG9sbG8vY2xpZW50L2NvcmUnO1xuaW1wb3J0IHR5cGUge09ic2VydmFibGV9IGZyb20gJ3J4anMnO1xuXG5pbXBvcnQge0Fwb2xsb30gZnJvbSAnLi9hcG9sbG8nO1xuaW1wb3J0IHtRdWVyeVJlZn0gZnJvbSAnLi9xdWVyeS1yZWYnO1xuaW1wb3J0IHtXYXRjaFF1ZXJ5T3B0aW9uc0Fsb25lLCBRdWVyeU9wdGlvbnNBbG9uZSwgRW1wdHlPYmplY3R9IGZyb20gJy4vdHlwZXMnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgUXVlcnk8VCA9IHt9LCBWIGV4dGVuZHMgT3BlcmF0aW9uVmFyaWFibGVzID0gRW1wdHlPYmplY3Q+IHtcbiAgcHVibGljIHJlYWRvbmx5IGRvY3VtZW50OiBEb2N1bWVudE5vZGUgfCBUeXBlZERvY3VtZW50Tm9kZTxULCBWPjtcbiAgcHVibGljIGNsaWVudCA9ICdkZWZhdWx0JztcblxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgYXBvbGxvOiBBcG9sbG8pIHt9XG5cbiAgcHVibGljIHdhdGNoKFxuICAgIHZhcmlhYmxlcz86IFYsXG4gICAgb3B0aW9ucz86IFdhdGNoUXVlcnlPcHRpb25zQWxvbmU8ViwgVD4sXG4gICk6IFF1ZXJ5UmVmPFQsIFY+IHtcbiAgICByZXR1cm4gdGhpcy5hcG9sbG8udXNlKHRoaXMuY2xpZW50KS53YXRjaFF1ZXJ5PFQsIFY+KHtcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICB2YXJpYWJsZXMsXG4gICAgICBxdWVyeTogdGhpcy5kb2N1bWVudCxcbiAgICB9KTtcbiAgfVxuXG4gIHB1YmxpYyBmZXRjaChcbiAgICB2YXJpYWJsZXM/OiBWLFxuICAgIG9wdGlvbnM/OiBRdWVyeU9wdGlvbnNBbG9uZTxWLCBUPixcbiAgKTogT2JzZXJ2YWJsZTxBcG9sbG9RdWVyeVJlc3VsdDxUPj4ge1xuICAgIHJldHVybiB0aGlzLmFwb2xsby51c2UodGhpcy5jbGllbnQpLnF1ZXJ5PFQsIFY+KHtcbiAgICAgIC4uLm9wdGlvbnMsXG4gICAgICB2YXJpYWJsZXMsXG4gICAgICBxdWVyeTogdGhpcy5kb2N1bWVudCxcbiAgICB9KTtcbiAgfVxufVxuIl19